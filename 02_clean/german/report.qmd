```{r}
# df_raw <- readxl::read_xlsx(here::here("01_data", "raw", "german", "12521-0040-KREISE_$F.xlsx"))

df_foreign_german <- read.csv(here::here("01_data", "raw", "german", "population.csv"))
df_foreign_register <- read.csv(here::here("01_data", "raw", "german", "register.csv"))


df_population <- read.csv(here::here("01_data", "intermediate", "population", "overseas.csv"))

df_foreign_german |> View()
df_foreign_register |> View()


df_population |> 
select(city_id, year, social, total, social_rate, lag_total, moving_in_total, moving_out_total, change, natural) |> 
mutate(
    social_rate_check = (social / lag(total))* 100,
    social_check = change - natural,
    .by = c(city_id, year))  |> View()
```


```{r}


df |> View()
```


```{r}



```

```{r}

main <- function(){
  
  # load data ####  
#   df_for <- read.csv(here::here("01_data", "intermediate", "population", "overseas_master.csv"), fileEncoding = "cp932") |> 
#     dplyr::filter(!year %in% c(2013, 2014)) |> 
#     dplyr::mutate(ln_lag_total = log(lag_total), .after = lag_total) |> 
#     dplyr::filter(social_rate > -50 & social_rate < 50)
  
  year_list <- seq(2015, 2022)
  
  
  # create_plots ####
  list_plot_for <- create_scatter_plot(df_for,
                                       var_x = ln_lag_total,
                                       var_y = social_rate,
                                       title_x = "外国人 人口(ln)")

  ggsave(list_plot_for, filename = here::here("04_output", "figures", "figure_6.png"),
         height = 10, width = 12)
  

}



create_scatter_plot <-  function(input_df, 
                                 var_x, var_y,
                                 title_x){
  
  var_x <- rlang::enquo(var_x)
  var_y <- rlang::enquo(var_y)
  
  list_color_1 <- c("#333333", "#A1CCD1", "#E9B384")
  list_color_2 <- c("#333333", "#3C8DAD", "#F5A962")
  
input_df |> colnames()
  ggplot(input_df,
                        #  aes(x = !!var_x, y = !!var_y)) +
                         aes(x = lag_ln_total, y = social_rate)) +
    geom_point(alpha = 0.5, colour = "#333333",
               fill = "#333333") +
    theme_bw(base_family = "HiraKakuPro-W3") +
    #   theme(
    #     panel.border       = element_blank(),
    #     axis.line.x.bottom = element_line(color = 'black'),
    #     axis.line.y.left   = element_line(color = 'black'),
    #     axis.line.y.right  = element_line(color = 'black'),
    #     axis.text.y.right  = element_blank(),
    #     plot.title = element_text(size = 15),
    #     axis.text.x = element_text(size = 20),
    #     axis.text.y = element_text(size = 20),
    #     axis.title.x = element_text(size = 22),
    #     axis.title.y = element_text(size = 22),
    #     panel.grid.major.y = element_line(color = "lightgray"),
    #     strip.background = element_blank(),
    #     strip.text = element_text(size = 22),
    #     strip.text.x = element_text(size = 20)
    #   ) +
    #   labs(
    #     x = title_x,
    #     y = "社会増減率") +
      geom_hline(yintercept = 0,
                 linewidth = 0.6,
                 colour = "black",
                 linetype = "solid") +
      geom_smooth(method = "lm",
                  formula = y ~ x,
                  se = FALSE,
                  color = "#3C8DAD",
                  linewidth = 1.3) +
      facet_wrap(~ year,
                 scales = "free") 
      scale_x_continuous(breaks = c(5, 10)) +
      scale_y_continuous(limits = c(-50, 50))
  
  return(output_plot)
}


```


```{r}
df_register |>
    dplyr::filter(category == "Total") |>  
    dplyr::filter(!str_detect(Opening.stock.Male, "-")) |>
    dplyr::filter(year == "2020") |> View()






# df_pop_german |>  
df_register_test |>
#   dplyr::filter(
#     str_detect(total_value, "-"),
#   ) |> 
        summarise(
            n = n_distinct(id),
            .by = year
        ) 

list_2015_original <- df_pop_german |>
    dplyr::filter(date == "2015-12-31") |>
    distinct(city_code) |>
    pull()

list_2020 <- df_pop_german |>
    dplyr::filter(date == "2020-12-31") |>
    distinct(city_code) |>
    pull()
list_2023 <- df_pop_german |>
    dplyr::filter(date == "2023-12-31") |>
    distinct(city_code) |>
    pull()


df_register |> View()

list_2017 <- df_register_test |>
    dplyr::filter(year == 2017) |>
    distinct(id) |>
    pull()

list_2016 <- df_register_test |>
    dplyr::filter(year == 2016) |>
    distinct(id) |>
    pull()

list_2023 <- df_register_test |>
    dplyr::filter(year == 2020) |>
    distinct(id) |>
    pull()

setdiff(list_2015_original, list_2020) 
setdiff(list_2017, list_2016) 
setdiff(list_2014, list_2015)
df_pop_german |> View()

df_register |>
  dplyr::filter(id %in% c(10041, 10042, 10043, 10044, 10045, 10046)) |> View()


```



```{r}


# write.csv(df_plot_base, "01_data/intermediate/german/temp_0719.csv")

```